{"version":3,"sources":["components/styles/MovieCard.module.css","App.module.css","components/styles/MoviesGrid.module.css","utils/httpClient.js","pages/MovieDetails.jsx","components/MovieCard.jsx","components/MoviesGrid.jsx","pages/LandingPage.jsx","App.jsx","reportWebVitals.js","index.js","pages/MovieDetails.module.css"],"names":["module","exports","get","path","fetch","headers","Authorization","then","result","json","MovieDetails","movieId","useParams","useState","movie","setMovie","useEffect","data","imageUrl","poster_path","className","styles","detailsContainer","col","movieImage","src","alt","title","movieDetails","genres","map","genre","name","join","overview","MovieCard","movieCard","to","id","width","height","MoviesGrid","movies","setMovies","results","moviesGrid","LandingPage","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,gC,mBCAxED,EAAOC,QAAU,CAAC,MAAQ,qB,mBCA1BD,EAAOC,QAAU,CAAC,WAAa,iC,iJCCxB,SAASC,EAAIC,GAClB,OAAOC,MAHG,+BAGSD,EAAM,CACvBE,QAAS,CACPC,cACE,6NACF,eAAgB,oCAEjBC,MAAK,SAACC,GAAD,OAAYA,EAAOC,U,2BCHtB,SAASC,IACd,IAAQC,EAAYC,cAAZD,QACR,EAA0BE,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAQA,GANAC,qBAAU,WACRd,EAAI,UAAYS,GAASJ,MAAK,SAACU,GAC7BF,EAASE,QAEV,CAACN,KAECG,EACH,OAAO,KAGT,IAAMI,EAAW,kCAAoCJ,EAAMK,YAC3D,OACE,sBAAKC,UAAWC,IAAOC,iBAAvB,UACE,qBACEF,UAAWC,IAAOE,IAAM,IAAMF,IAAOG,WACrCC,IAAKP,EACLQ,IAAKZ,EAAMa,QAEb,sBAAKP,UAAS,UAAKC,IAAOE,IAAZ,YAAmBF,IAAOO,cAAxC,UACE,8BACE,4CADF,IAC2Bd,EAAMa,SAEjC,8BACE,8CACCb,EAAMe,OAAOC,KAAI,SAACC,GAAD,OAAWA,EAAMC,QAAMC,KAAK,SAEhD,8BACE,kDADF,IACiCnB,EAAMoB,kB,qBClCxC,SAASC,EAAT,GAA+B,IAAVrB,EAAS,EAATA,MACpBI,EAAW,kCAAoCJ,EAAMK,YAC3D,OACE,oBAAIC,UAAWC,IAAOe,UAAtB,SACE,eAAC,IAAD,CAAMC,GAAI,WAAavB,EAAMwB,GAA7B,UACE,qBACEC,MAAO,IACPC,OAAQ,IACRpB,UAAWC,IAAOG,WAClBC,IAAKP,EACLQ,IAAKZ,EAAMa,QAEb,6BAAKb,EAAMa,a,qBCRZ,SAASc,IACd,MAA4B5B,mBAAS,IAArC,mBAAO6B,EAAP,KAAeC,EAAf,KAOA,OALA3B,qBAAU,WACRd,EAAI,mBAAmBK,MAAK,SAACU,GAC3B0B,EAAU1B,EAAK2B,cAEhB,IAED,oBAAIxB,UAAWC,IAAOwB,WAAtB,SACGH,EAAOZ,KAAI,SAAChB,GAAD,OACV,cAACqB,EAAD,CAA0BrB,MAAOA,GAAjBA,EAAMwB,SChBvB,SAASQ,IACd,OAAO,cAACL,EAAD,ICGF,SAASM,IACd,OACE,eAAC,IAAD,CAAQ3B,UAAU,MAAlB,UACE,iCACE,cAAC,IAAD,CAAMiB,GAAG,IAAT,SACE,oBAAIjB,UAAWC,IAAOM,MAAtB,wBAGJ,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqB,OAAK,EAAC7C,KAAK,mBAAlB,SACE,cAACO,EAAD,MAEF,cAAC,IAAD,CAAOP,KAAK,IAAZ,SACE,cAAC2C,EAAD,cCpBZ,IAYeG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,SAM1BZ,K,kBCfAjD,EAAOC,QAAU,CAAC,iBAAmB,uCAAuC,IAAM,0BAA0B,WAAa,iCAAiC,aAAe,sC","file":"static/js/main.73e08b6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieCard\":\"MovieCard_movieCard__FcqIS\",\"movieImage\":\"MovieCard_movieImage__1LMkz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__-GfWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesGrid\":\"MoviesGrid_moviesGrid__7oR3S\"};","const API = \"https://api.themoviedb.org/3\";\n\nexport function get(path) {\n  return fetch(API + path, {\n    headers: {\n      Authorization:\n        \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NzUzN2ZmMTlmMzgxZGQ3YjY3ZWVlMWVhOGI4MTY0YSIsInN1YiI6IjVlM2ExNmU1MGMyNzEwMDAxODc1NTI4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nOpZ_nBtA93tbzr6-rxD0760tssAAaSppyjRv9anArs\",\n      \"Content-Type\": \"application/json;charset=utf-8\",\n    },\n  }).then((result) => result.json());\n}\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\n// import movie from \"./movie.json\";\nimport { get } from \"../utils/httpClient\";\nimport styles from \"./MovieDetails.module.css\";\n\nexport function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    get(\"/movie/\" + movieId).then((data) => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const imageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n  return (\n    <div className={styles.detailsContainer}>\n      <img\n        className={styles.col + \" \" + styles.movieImage}\n        src={imageUrl}\n        alt={movie.title}\n      />\n      <div className={`${styles.col} ${styles.movieDetails}`}>\n        <p>\n          <strong>Title:</strong> {movie.title}\n        </p>\n        <p>\n          <strong>Genres: </strong>\n          {movie.genres.map((genre) => genre.name).join(\", \")}\n        </p>\n        <p>\n          <strong>Description:</strong> {movie.overview}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\n\nimport styles from \"./styles/MovieCard.module.css\";\nexport function MovieCard({ movie }) {\n  const imageUrl = \"https://image.tmdb.org/t/p/w300\" + movie.poster_path;\n  return (\n    <li className={styles.movieCard}>\n      <Link to={\"/movies/\" + movie.id}>\n        <img\n          width={230}\n          height={345}\n          className={styles.movieImage}\n          src={imageUrl}\n          alt={movie.title}\n        />\n        <h3>{movie.title}</h3>\n      </Link>\n    </li>\n  );\n}\n","// import movies from \"../movies.json\";\nimport { useEffect, useState } from \"react\";\nimport { get } from \"../utils/httpClient\";\n\nimport { MovieCard } from \"./MovieCard\";\nimport styles from \"./styles/MoviesGrid.module.css\";\n\nexport function MoviesGrid() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    get(\"/discover/movie\").then((data) => {\n      setMovies(data.results);\n    });\n  }, []);\n  return (\n    <ul className={styles.moviesGrid}>\n      {movies.map((movie) => (\n        <MovieCard key={movie.id} movie={movie} />\n      ))}\n    </ul>\n  );\n}\n","import { MoviesGrid } from \"../components/MoviesGrid\";\n\nexport function LandingPage() {\n  return <MoviesGrid />;\n}\n","import styles from \"./App.module.css\";\n// import { MoviesGrid } from \"./components/MoviesGrid\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { MovieDetails } from \"./pages/MovieDetails\";\nimport { LandingPage } from \"./pages/LandingPage\";\n\nexport function App() {\n  return (\n    <Router className=\"App\">\n      <header>\n        <Link to=\"/\">\n          <h1 className={styles.title}>Movies</h1>\n        </Link>\n      </header>\n      <main>\n        <Switch>\n          <Route exact path=\"/movies/:movieId\">\n            <MovieDetails />\n          </Route>\n          <Route path=\"/\">\n            <LandingPage />\n          </Route>\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"MovieDetails_detailsContainer__2Zpik\",\"col\":\"MovieDetails_col__1ZNus\",\"movieImage\":\"MovieDetails_movieImage__1ELh8\",\"movieDetails\":\"MovieDetails_movieDetails__3CUFM\"};"],"sourceRoot":""}